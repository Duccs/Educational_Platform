@model EducationalPlatform.Models.Teacher

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Teacher</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Dob)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Dob)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.DateOfEmp)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.DateOfEmp)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Gender)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Gender)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Address)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Address)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Phone)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Phone)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Courses)
        </dt>
        <dd class = "col-sm-10">
            @{
                var courses = (List<Course>) ViewData["Courses"];
            }
            @foreach (var c in courses) // Print the list
            {
                @Html.Label(c.Name);
                <br />
            }
        </dd>
    </dl>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model?.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>
